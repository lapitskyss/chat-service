openapi: 3.0.3
info:
  title: Bank Support Chat Manager API
  version: v1

servers:
  - url: http://localhost:8081/v1
    description: Development server

paths:
  /getFreeHandsBtnAvailability:
    post:
      description: Get is free hands button available
      parameters:
        - $ref: "#/components/parameters/XRequestIDHeader"
      responses:
        '200':
          description: Available check completed.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetFreeHandsBtnAvailabilityResponse"
  /freeHands:
    post:
      description: Manager ready for new client
      parameters:
        - $ref: "#/components/parameters/XRequestIDHeader"
      responses:
        '200':
          description: Request completed.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FreeHandsResponse"
  /getChats:
    post:
      description: Get the list of chats with open problems.
      parameters:
        - $ref: "#/components/parameters/XRequestIDHeader"
      responses:
        '200':
          description: Chats list.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetChatsResponse"

security:
  - bearerAuth: [ ]

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  parameters:
    XRequestIDHeader:
      in: header
      name: X-Request-ID
      schema:
        type: string
        format: uuid
        x-go-type: types.RequestID
        x-go-type-import:
          path: "github.com/lapitskyss/chat-service/internal/types"
      required: true

  schemas:
    # Common.

    ChatId:
      required: [ chatId ]
      properties:
        chatId:
          type: string
          format: uuid
          x-go-type: types.ChatID
          x-go-type-import:
            path: "github.com/lapitskyss/chat-service/internal/types"

    Error:
      required: [ message, code ]
      properties:
        code:
          $ref: "#/components/schemas/ErrorCode"
        message:
          type: string
        details:
          type: string

    ErrorCode:
      type: integer
      description: contains HTTP error codes and specific business logic error codes (the last must be >= 1000).
      enum:
        - 5000
      x-enum-varnames:
        - ErrorCodeManagerOverloaded
      minimum: 400

    # /getFreeHandsBtnAvailability
    GetFreeHandsBtnAvailabilityResponse:
      properties:
        data:
          $ref: "#/components/schemas/FreeHandsBtnAvailability"
        error:
          $ref: "#/components/schemas/Error"

    FreeHandsBtnAvailability:
      required: [ available ]
      properties:
        available:
          type: boolean

    # /freeHands
    FreeHandsResponse:
      properties:
        data:
          $ref: "#/components/schemas/FreeHands"
        error:
          $ref: "#/components/schemas/Error"

    FreeHands:
      required: [ ]

    # /getChats
    GetChatsResponse:
      properties:
        data:
          $ref: "#/components/schemas/ChatList"
        error:
          $ref: "#/components/schemas/Error"

    ChatList:
      required: [ chats ]
      properties:
        chats:
          type: array
          items: { $ref: "#/components/schemas/Chat" }

    Chat:
      allOf:
        - $ref: "#/components/schemas/ChatId"
        - type: object
          required: [ clientId ]
          properties:
            clientId:
              type: string
              format: uuid
              x-go-type: types.UserID
              x-go-type-import:
                path: "github.com/lapitskyss/chat-service/internal/types"